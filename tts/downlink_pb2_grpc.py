# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from . import downlink_pb2 as downlink__pb2

GRPC_GENERATED_VERSION = '1.73.1'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in downlink_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class DownlinkServiceStub(object):
    """下行链路服务
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.SendAudioMessage = channel.unary_unary(
                '/com.bysx.downlink.DownlinkService/SendAudioMessage',
                request_serializer=downlink__pb2.AudioMessageRequest.SerializeToString,
                response_deserializer=downlink__pb2.SimpleResponse.FromString,
                _registered_method=True)
        self.StreamAudioMessage = channel.stream_unary(
                '/com.bysx.downlink.DownlinkService/StreamAudioMessage',
                request_serializer=downlink__pb2.StreamAudioMessageRequest.SerializeToString,
                response_deserializer=downlink__pb2.SimpleResponse.FromString,
                _registered_method=True)
        self.SendTextMessage = channel.unary_unary(
                '/com.bysx.downlink.DownlinkService/SendTextMessage',
                request_serializer=downlink__pb2.TextMessageRequest.SerializeToString,
                response_deserializer=downlink__pb2.SimpleResponse.FromString,
                _registered_method=True)
        self.CancelTask = channel.unary_unary(
                '/com.bysx.downlink.DownlinkService/CancelTask',
                request_serializer=downlink__pb2.CancelTaskRequest.SerializeToString,
                response_deserializer=downlink__pb2.SimpleResponse.FromString,
                _registered_method=True)
        self.HealthCheck = channel.unary_unary(
                '/com.bysx.downlink.DownlinkService/HealthCheck',
                request_serializer=downlink__pb2.HealthCheckRequest.SerializeToString,
                response_deserializer=downlink__pb2.HealthCheckResponse.FromString,
                _registered_method=True)


class DownlinkServiceServicer(object):
    """下行链路服务
    """

    def SendAudioMessage(self, request, context):
        """发送PCM音频消息
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StreamAudioMessage(self, request_iterator, context):
        """流式发送PCM音频消息（客户端流式）
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SendTextMessage(self, request, context):
        """发送文本消息
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CancelTask(self, request, context):
        """取消任务
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def HealthCheck(self, request, context):
        """健康检查
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_DownlinkServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'SendAudioMessage': grpc.unary_unary_rpc_method_handler(
                    servicer.SendAudioMessage,
                    request_deserializer=downlink__pb2.AudioMessageRequest.FromString,
                    response_serializer=downlink__pb2.SimpleResponse.SerializeToString,
            ),
            'StreamAudioMessage': grpc.stream_unary_rpc_method_handler(
                    servicer.StreamAudioMessage,
                    request_deserializer=downlink__pb2.StreamAudioMessageRequest.FromString,
                    response_serializer=downlink__pb2.SimpleResponse.SerializeToString,
            ),
            'SendTextMessage': grpc.unary_unary_rpc_method_handler(
                    servicer.SendTextMessage,
                    request_deserializer=downlink__pb2.TextMessageRequest.FromString,
                    response_serializer=downlink__pb2.SimpleResponse.SerializeToString,
            ),
            'CancelTask': grpc.unary_unary_rpc_method_handler(
                    servicer.CancelTask,
                    request_deserializer=downlink__pb2.CancelTaskRequest.FromString,
                    response_serializer=downlink__pb2.SimpleResponse.SerializeToString,
            ),
            'HealthCheck': grpc.unary_unary_rpc_method_handler(
                    servicer.HealthCheck,
                    request_deserializer=downlink__pb2.HealthCheckRequest.FromString,
                    response_serializer=downlink__pb2.HealthCheckResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'com.bysx.downlink.DownlinkService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('com.bysx.downlink.DownlinkService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class DownlinkService(object):
    """下行链路服务
    """

    @staticmethod
    def SendAudioMessage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/com.bysx.downlink.DownlinkService/SendAudioMessage',
            downlink__pb2.AudioMessageRequest.SerializeToString,
            downlink__pb2.SimpleResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def StreamAudioMessage(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_unary(
            request_iterator,
            target,
            '/com.bysx.downlink.DownlinkService/StreamAudioMessage',
            downlink__pb2.StreamAudioMessageRequest.SerializeToString,
            downlink__pb2.SimpleResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SendTextMessage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/com.bysx.downlink.DownlinkService/SendTextMessage',
            downlink__pb2.TextMessageRequest.SerializeToString,
            downlink__pb2.SimpleResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CancelTask(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/com.bysx.downlink.DownlinkService/CancelTask',
            downlink__pb2.CancelTaskRequest.SerializeToString,
            downlink__pb2.SimpleResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def HealthCheck(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/com.bysx.downlink.DownlinkService/HealthCheck',
            downlink__pb2.HealthCheckRequest.SerializeToString,
            downlink__pb2.HealthCheckResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
